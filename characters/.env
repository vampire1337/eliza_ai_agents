### elizaOS Environment Variables ###
# To get started, copy this file to .env, or make a .env and add the settings you'd like to override
# Please read the comments for each of the configurations

## The only thing you ABSOLUTELY NEED to get up and running is one of the model provider keys, 
## i.e. OPENAI_API_KEY or ANTHROPIC_API_KEY, or setup the local-ai or ollama plugin
## Everything else is optional, and most settings and secrets can be configured in your agent or through the GUI
## For multi-agent, each agent will need keys for the various services it is connected to
-------------------------------
## You can use the .env or environment variables generally for shared keys, such as to model providers, 
## database, etc, with scoped keys for services such as Telegram, Discord, etc

## MODEL PROVIDER KEYS ##
## Eliza is compatible with a wide array of model providers. Many have OpenAI compatible APIs, 
## and you can use them by overriding the base URL

## NOTE: You will need a provider that provides embeddings. So even if you use Claude, you will 
## need to get embeddings using another provider, for example openai or our local-ai plugin

# OpenAI Configuration
## Use this to override the openai endpoint, for example for using together.ai, fireworks or other providers
## Optional overrides:
--------------------------------
# OPENAI_BASE_URL=
# OPENAI_SMALL_MODEL=gpt-4o-mini
# OPENAI_LARGE_MODEL=gpt-4o
# OPENAI_EMBEDDING_MODEL=text-embedding-3-small
# OPENAI_EMBEDDING_URL=
# OPENAI_EMBEDDING_DIMENSIONS=1536
# OPENAI_IMAGE_DESCRIPTION_MODEL=gpt-4o-mini
# OPENAI_IMAGE_DESCRIPTION_MAX_TOKENS=8192

# Anthropic Configuration
## By default in most of our starter kits, Anthropic will take precedence over OpenAI in handling requests
## Anthropic does not handle embeddings, so you may wish to use OpenAI for that, even while Claude is handling text generation
--------------------------------
ANTHROPIC_API_KEY=
# Optional overrides:
# ANTHROPIC_SMALL_MODEL=claude-3-5-haiku-latest
# ANTHROPIC_LARGE_MODEL=claude-3-5-sonnet-latest


# Ollama Configuration
## Highly recommended to use gemma3:latest for text generation
--------------------------------
# OLLAMA_API_ENDPOINT=http://localhost:11434/api
# OLLAMA_SMALL_MODEL=gemma3:latest
# OLLAMA_MEDIUM_MODEL=gemma3:latest
# OLLAMA_LARGE_MODEL=gemma3:latest


# Local AI Configuration
## REMEMBER A GOOD AMOUNT OF VRAM IS NEEDED FOR THE LARGE LOCAL MODELS
--------------------------------
# LOCAL_SMALL_MODEL=DeepHermes-3-Llama-3-3B-Preview-q4.gguf
# LOCAL_LARGE_MODEL=DeepHermes-3-Llama-3-70B-Preview-q4.gguf
# LOCAL_EMBEDDING_MODEL=bge-small-en-v1.5.Q4_K_M.gguf




# Highly recommended to use nomic-embed-text for embeddings
# OLLAMA_EMBEDDING_MODEL=nomic-embed-text 

### DATABASE ###
# By default, Eliza will use a local pglite instance
# If you fill out POSTGRES_URL, the agent will connect to your postgres instance instead of using the local path

# You can override the pglite data directory

# Fill this out if you want to use Postgres
POSTGRES_URL=

### LOGGING CONFIGURATION ###
# Logging Configuration (supported: fatal, error, warn, info, debug, trace | default: info)
LOG_LEVEL=


# Sentry Configuration
--------------------------------
## DO NOT CHANGE THIS UNLESS YOU KNOW WHAT YOU ARE DOING
--------------------------------
# Sentry is a tool for monitoring and logging errors and exceptions
# It is used to track errors and exceptions in the agent
--------------------------------
# Sentry Configuration
SENTRY_LOGGING=true
SENTRY_DSN=
SENTRY_ENVIRONMENT=
SENTRY_TRACES_SAMPLE_RATE=
SENTRY_SEND_DEFAULT_PII=



### Additional Environment Variables from Runtime ###
# Variables found in process.env that were not in the template
ALLUSERSPROFILE=C:\ProgramData
AMDRMSDKPATH=C:\Program Files\AMD\RyzenMasterSDK\
APPDATA=C:\Users\mihai\AppData\Roaming
asl.log=Destination=file
ChocolateyInstall=C:\ProgramData\chocolatey
ChocolateyLastPathUpdate=133848038530947688
CommonProgramFiles=C:\Program Files\Common Files
CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files
CommonProgramW6432=C:\Program Files\Common Files
COMPUTERNAME=HEIST
ComSpec=C:\WINDOWS\system32\cmd.exe
DriverData=C:\Windows\System32\Drivers\DriverData
EFC_2424_1592913036=1
HOMEDRIVE=C:
HOMEPATH=\Users\mihai
LOCALAPPDATA=C:\Users\mihai\AppData\Local
LOGONSERVER=\\HEIST
NEO4J_PASSWORD=080299vampire
NEO4J_URI=bolt://neo4j:7687
NEO4J_USER=neo4j
NODE_NO_WARNINGS=1
NODE_OPTIONS=--no-deprecation
NUMBER_OF_PROCESSORS=16
NVM_HOME=C:\Users\mihai\AppData\Local\nvm
NVM_SYMLINK=C:\nvm4w\nodejs
OneDrive=C:\Users\mihai\OneDrive
OPENAPI_SPEC_PATH=./tester_krona_agent/api_specs/real_openapi_spec.json
OPENROUTER_API_KEY=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
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
OS=Windows_NT
Path=c:\Users\mihai\AppData\Local\Programs\cursor\resources\app\bin;c:\Users\mihai\AppData\Local\Programs\cursor\resources\app\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Users\mihai\AppData\Local\Microsoft\WindowsApps;C:\Users\mihai\AppData\Roaming\npm;C:\Users\mihai\AppData\Local\GitHubDesktop\bin;C:\Program Files\Oracle\VirtualBox;c:\Users\mihai\AppData\Local\Programs\cursor\resources\app\bin;c:\Users\mihai\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Users\mihai\AppData\Local\Microsoft\WindowsApps;C:\Users\mihai\AppData\Roaming\npm;C:\Users\mihai\AppData\Local\GitHubDesktop\bin;C:\Program Files\Oracle\VirtualBox;C:\Users\mihai\AppData\Local\Programs\cursor\resources\app\bin;c:\Users\mihai\AppData\Local;C:\Program Files\PuTTY\;C:\Program Files\PostgreSQL\17\bin;C:\Program Files\dotnet\;C:\Users\mihai\AppData\Local\nvm;C:\nvm4w\nodejs;C:\Program Files\NVIDIA Corporation\NVIDIA App\NvDLISR;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\GitHub CLI\;C:\Users\mihai\AppData\Local\Microsoft\WindowsApps\python.exe;C:\Users\mihai\AppData\Local\Programs\Python\Python313\python.exe;C:\Program Files\Docker\Docker\resources\bin;C:\Users\mihai\.bun\bin;C:\\Users\\mihai\\.bun\\bin;C:\Users\mihai\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\mihai\AppData\Local\Programs\Python\Python313\;C:\Users\mihai\scoop\shims;C:\Users\mihai\AppData\Local\Microsoft\WindowsApps;C:\Users\mihai\AppData\Roaming\npm;C:\Users\mihai\AppData\Local\GitHubDesktop\bin;C:\Program Files\Oracle\VirtualBox;C:\Users\mihai\AppData\Local\Programs\cursor\resources\app\bin;c:\users\mihai\appdata\roaming\python\python313\scripts;c:\users\mihai\.local\bin;C:\Users\mihai\AppData\Local\nvm;C:\nvm4w\nodejs;C:\Users\mihai\.dotnet\tools;C:\Users\mihai\AppData\Local\Microsoft\WindowsApps\python.exe;C:\Users\mihai\AppData\Local\Pandoc\;C:\Users\mihai\AppData\Local\Programs\Python\Python313\python.exe;C:\Users\mihai\.bun\bin;C:\\Users\\mihai\\.bun\\bin;
PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC
PROCESSOR_ARCHITECTURE=AMD64
PROCESSOR_IDENTIFIER=AMD64 Family 25 Model 33 Stepping 2, AuthenticAMD
PROCESSOR_LEVEL=25
PROCESSOR_REVISION=2102
ProgramData=C:\ProgramData
ProgramFiles=C:\Program Files
ProgramFiles(x86)=C:\Program Files (x86)
ProgramW6432=C:\Program Files
PROMPT=$P$G
PSModulePath=C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules
PUBLIC=C:\Users\Public
SESSIONNAME=Console
SRG_BASE_URL=https://test.srg-it.ru
SRG_PASSWORD=testtest
SRG_USERNAME=new_test
SUPABASE_DB_PASSWORD=sjaDnGekFoMr6g0H
SUPABASE_PROJECT_REF=postgresql://postgres%2Eweviagifrlfndbhgktof:sjaDnGekFoMr6g0H@aws-0-us-east-1.pooler.supabase.com:6543/postgres
SUPABASE_REGION=us-east-1
SystemDrive=C:
SystemRoot=C:\WINDOWS
TELEGRAM_ADMIN_ID=339169650
TELEGRAM_BOT_TOKEN=7934004668:AAFSshdBE17_OaIVfZtqY7eeWvVmSNZx7uE
TEMP=C:\Users\mihai\AppData\Local\Temp
TMP=C:\Users\mihai\AppData\Local\Temp
USERDOMAIN=HEIST
USERDOMAIN_ROAMINGPROFILE=HEIST
USERNAME=mihai
USERPROFILE=C:\Users\mihai
VBOX_HWVIRTEX_IGNORE_SVM_IN_USE=1
VBOX_MSI_INSTALL_PATH=C:\Program Files\Oracle\VirtualBox\
windir=C:\WINDOWS
PGLITE_DATA_DIR=C:\Users\mihai\Heist_master_PC\Documents\GitHub\eliza_ai_agents\qa-insurance-project\.eliza\.elizadb
OPENAI_API_KEY=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